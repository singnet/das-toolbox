name: multiplatform-dry-run

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  multiplatforms-dry-run:
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-24.04", "windows-latest"]
        python-version: ["3.10", "3.13"]
      max-parallel: 4

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        run: |
          python -m venv .venv

      - name: Install das-cli
        run: |
          python -m pip install --upgrade pip
          cd das-cli/src
          python -m pip install -e .

      - name: Configure das-cli
        shell: bash
        run: |
          source .venv/bin/activate
          python -c "import sys; sys.stdout.write('\n' * 7 + '37007' + '\n' * 12)" | das-cli config set

      - name: Dry-run das-cli commands
        shell: bash
        run: |
          source .venv/bin/activate
          das-cli --version
          das-cli db start
          das-cli ab start
          python -c "import sys; sys.stdout.write('42000:42999' + '\n')" | das-cli qa start
      
      - name: Clean up
        shell: bash
        run: |
          source .venv/bin/activate
          das-cli qa stop
          das-cli ab stop
          das-cli db stop
